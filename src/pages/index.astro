---
import '../styles/index.css';

import ProfilePicture from '../assets/pfp.png';

import Card from '../components/Card.astro';
import Layout from '../layouts/Layout.astro';
import ImageGlow from '../components/ImageGlow.astro';
import Icon from '../components/Icon.astro';
import ProjectCard from '../components/ProjectCard.astro';
import WorkCard from '../components/WorkCard.astro';
import { getCollection } from 'astro:content';
import { getEntry } from 'astro:content';
import { render } from 'astro:content';
import { name, openGraph } from 'spectre:globals';

const [posts, projects, about, work, quickInfo, socials] = await Promise.all([
	getCollection('posts', (post) => post.data.draft !== true),
	getCollection('projects'),
	getEntry('other', 'about'),
	getCollection('work'),
	getCollection('quickInfo'),
	getCollection('socials')
]);

// biome-ignore lint/style/noNonNullAssertion: Should always be defined.
const { Content: About } = await render(about!);
---

<Layout
	title={openGraph.home.title || name}
	description={openGraph.home.description}
	pagefindIgnore
>
	<div class="layout-grid-left" slot="left">
		<Card class="flex-col-card">
			<ImageGlow quality={100} width={80} height={80} src={ProfilePicture} alt="Louis looking out of a window" loading='eager' />
			<h2>{name}</h2>
			<ul class="overview-list">
				{quickInfo.map((info) => (
					<li>
						<Icon type={info.data.icon.type} name={info.data.icon.name as any} width={24} height={24} class='glow-icon' />
						<span>{info.data.text}</span>
					</li>
				))}
			</ul>
		</Card>
		<Card>
			<h3 class="no-mt">Socials</h3>
			<ul class="overview-list">
				{socials.map((item) => (
					<li>
						<a href={item.data.link} class="socials-link">
							<Icon type={item.data.icon.type} name={item.data.icon.name as any} width={24} height={24} class='glow-icon' />
							<span>{item.data.text}</span>
						</a>
					</li>
				))}
			</ul>
		</Card>
	</div>
	<div class="layout-grid-right" slot="right">
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="user" width={24} height={24} class='glow-icon' />
				<h2>About me</h2>
			</div>
			<div class="prose">
				<About />
			</div>
		</Card>
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="rss" width={24} height={24} class='glow-icon' />
				<h2>Latest Posts</h2>
			</div>
			<div class="content-container">
				{posts.sort((a, b) => b.data.createdAt.getTime() - a.data.createdAt.getTime()).slice(0, 3).map((post) => (
					<a href={`/blog/${post.id}`} class="post-container">
						<div class="post-header">
							<h3>{post.data.title}</h3>
							<span class="post-date">{post.data.createdAt.toLocaleDateString()}</span>
						</div>
						<span>{post.data.description}</span>
					</a>
				))}
			</div>
			<div class="see-all-container">
				<a href="/blog" class="see-all-link">See all posts →</a>
			</div>
		</Card>
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="folder-git" width={24} height={24} class='glow-icon' />
				<h2>Latest Projects</h2>
			</div>
			<div class="content-container">
				{projects.sort((a, b) => a.data.id - b.data.id).slice(0, 4).map((project) => (
					<ProjectCard project={project} />
				))}
			</div>
			<div class="see-all-container">
				<a href="/projects" class="see-all-link">See all projects →</a>
			</div>
		</Card>
		<Card>
			<div class="header-container">
				<Icon type='lucide' name="briefcase-business" width={24} height={24} class='glow-icon' />
				<h2>Work Experience</h2>
			</div>
			<div class="content-container">
				{work.sort((a, b) => b.data.date.getTime() - a.data.date.getTime()).slice(0, 4).map((workItem) => <WorkCard work={workItem} />)}
			</div>
			<div class="see-all-container">
				<a href="/work" class="see-all-link">See all work experience →</a>
			</div>
		</Card>
	</div>
</Layout>

<style>
	.see-all-container {
		padding-top: 0.75rem;
		margin-top: 0.75rem;
		display: flex;
	}

	.see-all-link {
		font-size: 0.875rem;
		color: var(--primary-light);
		text-decoration: none;
		transition: color 0.2s ease;
		padding: 0.375rem 0.75rem;
		border-radius: 0.375rem;
		background: transparent;
		display: inline-flex;
		align-items: center;
		gap: 0.25rem;
	}
	
	.see-all-link:hover {
		background: var(--primary);
		color: black;
		text-decoration: none;
	}
</style>
